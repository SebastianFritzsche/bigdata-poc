{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory-Name",
			"defaultValue": "BigDataTestCenterEuropeWest"
		},
		"BigDataAzureDatalakeStorageEuropeWest_accountKey": {
			"type": "secureString",
			"metadata": "Sichere Zeichenfolge f√ºr \"accountKey\" von \"BigDataAzureDatalakeStorageEuropeWest\""
		},
		"BigDataAzureDatalakeStorageEuropeWest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bigdataspeicherkontoeuwe.dfs.core.windows.net"
		},
		"HttpServerArcgis_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://opendata.arcgis.com"
		},
		"HttpServerCorona_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.rki.de"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.openweathermap.org"
		},
		"RestServiceCorona_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://services7.arcgis.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {
				"preventDataExfiltration": false
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BigDataAzureDatalakeStorageEuropeWest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('BigDataAzureDatalakeStorageEuropeWest_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('BigDataAzureDatalakeStorageEuropeWest_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServerArcgis')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServerArcgis_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServerCorona')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServerCorona_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceCorona')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceCorona_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CoronaGeoCsvDataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BigDataAzureDatalakeStorageEuropeWest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "corona/geo",
						"fileSystem": "foo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BigDataAzureDatalakeStorageEuropeWest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CoronaJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BigDataAzureDatalakeStorageEuropeWest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "corona",
						"fileSystem": "foo"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"objectIdFieldName": {
							"type": "string"
						},
						"uniqueIdField": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"isSystemMaintained": {
									"type": "boolean"
								}
							}
						},
						"globalIdFieldName": {
							"type": "string"
						},
						"fields": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"alias": {
										"type": "string"
									},
									"sqlType": {
										"type": "string"
									},
									"domain": {
										"type": "null"
									},
									"defaultValue": {
										"type": "null"
									}
								}
							}
						},
						"exceededTransferLimit": {
							"type": "boolean"
						},
						"features": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"attributes": {
										"type": "object",
										"properties": {
											"IdBundesland": {
												"type": "integer"
											},
											"Bundesland": {
												"type": "string"
											},
											"Landkreis": {
												"type": "string"
											},
											"Altersgruppe": {
												"type": "string"
											},
											"Geschlecht": {
												"type": "string"
											},
											"AnzahlFall": {
												"type": "integer"
											},
											"AnzahlTodesfall": {
												"type": "integer"
											},
											"ObjectId": {
												"type": "integer"
											},
											"Meldedatum": {
												"type": "integer"
											},
											"IdLandkreis": {
												"type": "string"
											},
											"Datenstand": {
												"type": "string"
											},
											"NeuerFall": {
												"type": "integer"
											},
											"NeuerTodesfall": {
												"type": "integer"
											},
											"Refdatum": {
												"type": "integer"
											},
											"NeuGenesen": {
												"type": "integer"
											},
											"AnzahlGenesen": {
												"type": "integer"
											},
											"IstErkrankungsbeginn": {
												"type": "integer"
											},
											"Altersgruppe2": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BigDataAzureDatalakeStorageEuropeWest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CoronaLkExcel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServerCorona",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/DE/Content/InfAZ/N/Neuartiges_Coronavirus/Daten/Fallzahlen_Kum_Tab.xlsx?__blob=publicationFile"
					},
					"sheetIndex": 4,
					"firstRowAsHeader": false
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServerCorona')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextCorona')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServerCorona",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/DE/Content/InfAZ/N/Neuartiges_Coronavirus/Projekte_RKI/Nowcasting_Zahlen_csv.csv?__blob=publicationFile"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Datum",
						"type": "String"
					},
					{
						"name": "Sch√§tzer_Neuerkrankungen",
						"type": "String"
					},
					{
						"name": "UG_PI_Neuerkrankungen",
						"type": "String"
					},
					{
						"name": "OG_PI_Neuerkrankungen",
						"type": "String"
					},
					{
						"name": "Sch√§tzer_Neuerkrankungen_ma4",
						"type": "String"
					},
					{
						"name": "UG_PI_Neuerkrankungen_ma4",
						"type": "String"
					},
					{
						"name": "OG_PI_Neuerkrankungen_ma4",
						"type": "String"
					},
					{
						"name": "Sch√§tzer_Reproduktionszahl_R",
						"type": "String"
					},
					{
						"name": "UG_PI_Reproduktionszahl_R",
						"type": "String"
					},
					{
						"name": "OG_PI_Reproduktionszahl_R",
						"type": "String"
					},
					{
						"name": "Sch√§tzer_7_Tage_R_Wert",
						"type": "String"
					},
					{
						"name": "UG_PI_7_Tage_R_Wert",
						"type": "String"
					},
					{
						"name": "OG_PI_7_Tage_R_Wert",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServerCorona')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextCoronaGeo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServerArcgis",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/datasets/dd4580c810204019a7b8eb3e0b329dd6_0.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ObjectId",
						"type": "String"
					},
					{
						"name": "IdBundesland",
						"type": "String"
					},
					{
						"name": "Bundesland",
						"type": "String"
					},
					{
						"name": "Landkreis",
						"type": "String"
					},
					{
						"name": "Altersgruppe",
						"type": "String"
					},
					{
						"name": "Geschlecht",
						"type": "String"
					},
					{
						"name": "AnzahlFall",
						"type": "String"
					},
					{
						"name": "AnzahlTodesfall",
						"type": "String"
					},
					{
						"name": "Meldedatum",
						"type": "String"
					},
					{
						"name": "IdLandkreis",
						"type": "String"
					},
					{
						"name": "Datenstand",
						"type": "String"
					},
					{
						"name": "NeuerFall",
						"type": "String"
					},
					{
						"name": "NeuerTodesfall",
						"type": "String"
					},
					{
						"name": "Refdatum",
						"type": "String"
					},
					{
						"name": "NeuGenesen",
						"type": "String"
					},
					{
						"name": "AnzahlGenesen",
						"type": "String"
					},
					{
						"name": "IstErkrankungsbeginn",
						"type": "String"
					},
					{
						"name": "Altersgruppe2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServerArcgis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceCorona')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceCorona",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "mOBPykOjAyBO2ZKk/arcgis/rest/services/RKI_COVID19/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceCorona')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeatherJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BigDataAzureDatalakeStorageEuropeWest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "weather",
						"fileSystem": "foo"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"coord": {
							"type": "object",
							"properties": {
								"lon": {
									"type": "number"
								},
								"lat": {
									"type": "number"
								}
							}
						},
						"weather": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer"
									},
									"main": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"icon": {
										"type": "string"
									}
								}
							}
						},
						"base": {
							"type": "string"
						},
						"main": {
							"type": "object",
							"properties": {
								"temp": {
									"type": "number"
								},
								"feels_like": {
									"type": "number"
								},
								"temp_min": {
									"type": "number"
								},
								"temp_max": {
									"type": "number"
								},
								"pressure": {
									"type": "integer"
								},
								"humidity": {
									"type": "integer"
								},
								"sea_level": {
									"type": "integer"
								},
								"grnd_level": {
									"type": "integer"
								}
							}
						},
						"visibility": {
							"type": "integer"
						},
						"wind": {
							"type": "object",
							"properties": {
								"speed": {
									"type": "number"
								},
								"deg": {
									"type": "integer"
								},
								"gust": {
									"type": "number"
								}
							}
						},
						"clouds": {
							"type": "object",
							"properties": {
								"all": {
									"type": "integer"
								}
							}
						},
						"dt": {
							"type": "integer"
						},
						"sys": {
							"type": "object",
							"properties": {
								"type": {
									"type": "integer"
								},
								"id": {
									"type": "integer"
								},
								"country": {
									"type": "string"
								},
								"sunrise": {
									"type": "integer"
								},
								"sunset": {
									"type": "integer"
								}
							}
						},
						"timezone": {
							"type": "integer"
						},
						"id": {
							"type": "integer"
						},
						"name": {
							"type": "string"
						},
						"cod": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BigDataAzureDatalakeStorageEuropeWest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeatherRestResource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"city": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('/data/2.5/weather?appid=5b939f053acd072bd9991d4378f1e719&q=',dataset().city)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowCorona')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "BigDataAzureDatalakeStorageEuropeWest",
								"type": "LinkedServiceReference"
							},
							"name": "coronaGeoCsv"
						}
					],
					"sinks": [
						{
							"name": "coronaCache"
						}
					],
					"transformations": [
						{
							"name": "CoronaFiltered"
						}
					],
					"script": "source(output(\n\t\tObjectId as short,\n\t\tIdBundesland as short,\n\t\tBundesland as string,\n\t\tLandkreis as string,\n\t\tAltersgruppe as string,\n\t\tGeschlecht as string,\n\t\tAnzahlFall as integer,\n\t\tAnzahlTodesfall as integer,\n\t\tMeldedatum as timestamp,\n\t\tIdLandkreis as short,\n\t\tDatenstand as timestamp 'dd.MM.yyyy\\',\\' HH:mm \\'Uhr\\'',\n\t\tNeuerFall as boolean,\n\t\tNeuerTodesfall as short,\n\t\tRefdatum as timestamp,\n\t\tNeuGenesen as integer,\n\t\tAnzahlGenesen as integer,\n\t\tIstErkrankungsbeginn as boolean,\n\t\tAltersgruppe2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tfileSystem: 'foo',\n\tfolderPath: 'corona/geo/datasets',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tqutoChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> coronaGeoCsv\ncoronaGeoCsv select(mapColumn(\n\t\tIdBundesland,\n\t\tBundesland,\n\t\tIdLandkreis,\n\t\tLandkreis,\n\t\tAltersgruppe,\n\t\tGeschlecht,\n\t\tAnzahlFall,\n\t\tAnzahlTodesfall,\n\t\tNeuGenesen,\n\t\tAnzahlGenesen\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CoronaFiltered\nCoronaFiltered sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false) ~> coronaCache"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BigDataAzureDatalakeStorageEuropeWest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeatherPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Weather Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "WeatherRestResource",
								"type": "DatasetReference",
								"parameters": {
									"city": "Frankfurt an der Oder"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "WeatherJSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Corona Data JSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResourceCorona",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CoronaJSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Corona Data CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedTextCorona",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CoronaJSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Corona Data Excel",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CoronaLkExcel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CoronaJSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Corona Geo Data CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedTextCoronaGeo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CoronaGeoCsvDataLake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-18T13:04:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WeatherRestResource')]",
				"[concat(variables('factoryId'), '/datasets/WeatherJSON')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceCorona')]",
				"[concat(variables('factoryId'), '/datasets/CoronaJSON')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedTextCorona')]",
				"[concat(variables('factoryId'), '/datasets/CoronaLkExcel')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedTextCoronaGeo')]",
				"[concat(variables('factoryId'), '/datasets/CoronaGeoCsvDataLake')]"
			]
		}
	]
}